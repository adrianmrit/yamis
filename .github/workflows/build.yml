# Builds the project and uploads as artifacts
name: Build
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  TARGET_DIR: target_ci
  ARTIFACT_DIR: artifacts

jobs:
  build:
    name: Build for ${{ matrix.binary_target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Note that we use different solutions to build for different targets.
          # For musl there are issues with openssl, but with rust build action it works fine
          # This action however does not work with certain other targets, so we only use it for musl
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-gnu
            builder: cross
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-musl
            builder: rust-build-action
          - os: windows-latest
            binary_target: x86_64-pc-windows-msvc
            builder: cross
          - os: macos-latest
            binary_target: x86_64-apple-darwin
            builder: cross
          - os: macos-latest
            binary_target: aarch64-apple-darwin
            builder: cross
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install toolchain
        if: matrix.builder == 'cross'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.binary_target }}
          default: true
          profile: minimal
          override: true

      - name: Build target
        if: matrix.builder == 'cross'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.binary_target }} --target-dir ${{ env.TARGET_DIR }}

      - name: Compile
        if: matrix.binary_target == 'x86_64-unknown-linux-musl'
        id: compile
        uses: rust-build/rust-build.action@v1.3.2
        with:
            RUSTTARGET: ${{ matrix.binary_target }}
            ARCHIVE_TYPES: tar.gz
            ARCHIVE_NAME: yamis-${{ github.ref_name }}-${{ matrix.binary_target }}
            EXTRA_FILES: "README.md LICENSE CHANGELOG.md"
            TOOLCHAIN_VERSION: "stable"
            UPLOAD_MODE: none

      - name: Move musl binary
        if: matrix.builder == 'rust-build-action'
        # These should match the python script below
        run: |
          sudo mkdir -p ${{ env.ARTIFACT_DIR }}
          sudo mv ${{ steps.compile.outputs.BUILT_ARCHIVE }} ${{ env.ARTIFACT_DIR }}/yamis-${{ github.ref_name }}-${{ matrix.binary_target }}.tar.gz
          sudo mv ${{ steps.compile.outputs.BUILT_CHECKSUM }} ${{ env.ARTIFACT_DIR }}/yamis-${{ github.ref_name }}-${{ matrix.binary_target }}.tar.gz.sha256

      - name: Setup Python 3
        if: matrix.builder == 'cross'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Package
        if: matrix.builder == 'cross'
        run: python -m ci_build ${{ env.TARGET_DIR }} ${{ matrix.binary_target }} ${{  github.ref_name }} ${{ env.ARTIFACT_DIR }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: yamis-${{ github.ref_name }}-releases
          if-no-files-found: error
          path: ${{ env.ARTIFACT_DIR }}
