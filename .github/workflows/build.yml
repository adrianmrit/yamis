# Builds the project and uploads as artifacts
name: Build
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  TARGET_DIR: target_ci
  ARTIFACT_DIR: artifacts

jobs:
  build:
    name: Build for ${{ matrix.binary_target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-musl
          - os: windows-latest
            binary_target: x86_64-pc-windows-msvc
          - os: windows-latest
            binary_target: x86_64-pc-windows-gnu
          - os: macos-latest
            binary_target: x86_64-apple-darwin
          - os: macos-latest
            binary_target: aarch64-apple-darwin
    steps:
      - name: Install musl tools
        if: matrix.binary_target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install musl-tools
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.binary_target }}
          default: true
          profile: minimal
          override: true
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }} --target-dir ${{ env.TARGET_DIR }}
      - name: Package
        run: python -m ci_build ${{ env.TARGET_DIR }} ${{ matrix.binary_target }} ${{  github.ref_name }} ${{ env.ARTIFACT_DIR }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: yamis-${{ github.ref_name }}-releases
          if-no-files-found: error
          path: ${{ env.ARTIFACT_DIR }}
